<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog>
        <DialogContent>
            <div class="d-flex flex-column py-1">
                <MudTextField InputType="InputType.Text" Label='@Localizer["label-admin-add-user-first-name"]' @bind-Value="model.FirstName" For="(() => model.FirstName)" />
                <MudTextField InputType="InputType.Text" Label='@Localizer["label-admin-add-user-last-name"]' @bind-Value="model.LastName" For="(() => model.LastName)" />
                <MudTextField InputType="InputType.Text" Label='@Localizer["label-admin-add-user-username"]' @bind-Value="model.Username" For="(() => model.Username)" />
                <MudTextField InputType="InputType.Email" Label='@Localizer["label-admin-add-user-email"]' @bind-Value="model.Email" For="(() => model.Email)" />
                <MudSelect T="int?" Label='@Localizer["label-admin-add-user-role"]' AnchorOrigin="Origin.BottomCenter" @bind-Value="@model.RoleId" For="(() => model.RoleId)">
                    @foreach(var role in roles)
                    {
                        <MudSelectItem T="int?" Value="@role.Id">@role.Name</MudSelectItem>
                    }
                </MudSelect>
                <MudDatePicker Label='@Localizer["label-admin-add-user-birth-date"]' @bind-Date="model.BirthDate" DateFormat="yyyy-MM-dd" />
                <MudCheckBox Label='@Localizer["label-admin-add-user-is-trained"]' @bind-Checked="model.IsTrained" />
                <MudTextField InputType="InputType.Telephone" Label='@Localizer["label-admin-add-user-phone-number"]' @bind-Value="model.PhoneNumber" For="(() => model.PhoneNumber)" />
            </div>
        </DialogContent>
        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@Localizer["button-admin-add-user-submit"]</MudButton>
            <MudButton ButtonType="ButtonType.Reset" Variant="Variant.Filled" Color="Color.Secondary">@Localizer["button-global-clear"]</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog {get;set;}

    public class AddUserForm
    {
        [Required(ErrorMessageResourceName = "error_admin_add_user_first_name", ErrorMessageResourceType = typeof(Resources.App))]
        public string FirstName {get;set;}
        [Required(ErrorMessageResourceName = "error_admin_add_user_last_name", ErrorMessageResourceType = typeof(Resources.App))]
        public string LastName {get;set;}
        [Required(ErrorMessageResourceName = "error_admin_add_user_username", ErrorMessageResourceType = typeof(Resources.App))]
        public string Username {get;set;}
        [Required(ErrorMessageResourceName = "error_admin_add_user_email", ErrorMessageResourceType = typeof(Resources.App))]
        public string Email {get;set;}
        [Required(ErrorMessageResourceName = "error_admin_add_user_role", ErrorMessageResourceType = typeof(Resources.App))]
        public int? RoleId {get;set;}
        [Required(ErrorMessageResourceName = "error_admin_add_user_birth_date", ErrorMessageResourceType = typeof(Resources.App))]
        public DateTime? BirthDate {get;set;}
        public bool IsTrained {get;set;}
        public string? PhoneNumber {get;set;}
    }

    private AddUserForm model = new AddUserForm();

    private IEnumerable<Role> roles = new List<Role>();

    protected override async void OnInitialized()
    {
        GetRoles();
        StateHasChanged();
    }

    private async void GetRoles()
    {
        roles = await RoleService.GetAll();
    }

    private async void OnValidSubmit()
    {
        try
        {
            await UserService.AddUser(model.FirstName, model.LastName, model.Username, model.Email, (int) model.RoleId, model.BirthDate, model.IsTrained, model.PhoneNumber);
            Snackbar.Add(@Localizer["snackbar-admin-add-user-success"], Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
            MudDialog.Cancel();
        }
    }
}