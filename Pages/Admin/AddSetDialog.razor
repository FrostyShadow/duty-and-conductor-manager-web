<EditForm Model="@model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudDialog>
        <DialogContent>
            <div class="d-flex flex-column py-1">
                <MudTextField InputType="InputType.Text" Label='Name' @bind-Value="model.Name" For="(() => model.Name)" />
                <MudSlider Max="3" Min="1" Step="1" @bind-Value="NumberOfVehicles">Number of vehicles: @NumberOfVehicles</MudSlider>
                <MudSelect T="int" Label="Leading vehicle">

                </MudSelect>
                @if (NumberOfVehicles >= 2)
                {
                    <MudSelect T="int" Label="Secondary vehicle">

                    </MudSelect>
                }
                @if (NumberOfVehicles == 3)
                {
                    <MudSelect T="int" Label="Tertiary vehicle">
                        
                    </MudSelect>
                }
            </div>
        </DialogContent>
        <DialogActions>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
            <MudButton ButtonType="ButtonType.Reset" Variant="Variant.Filled" Color="Color.Secondary">Reset form</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog {get;set;}
    public int NumberOfVehicles {get;set;} = 1;

    public class AddSetForm
    {
        public string Name {get;set;}
    }

    private AddSetForm model = new AddSetForm();


    protected override async void OnInitialized()
    {
    }


    private async void OnValidSubmit()
    {
        try
        {
            await VehicleService.AddVehicleManufacturer(model.Name);
            Snackbar.Add(@Localizer["snackbar-admin-add-user-success"], Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
            MudDialog.Cancel();
        }
    }
}