@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService
@inject IThemeLibrary ThemeLibrary
<MudThemeProvider Theme="@currentTheme" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Conductor Service Manager
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Translate" Color="Color.Inherit" />
        <MudIconButton Color="Color.Inherit" Icon="@Icons.Material.Filled.Brightness4" OnClick="(() => DarkMode())" />
        <LoginDisplay />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="d-flex flex-column" Style="height: 100vh">
        <MudContainer Class="mx-5 pa-5 align-self-center" MaxWidth="MaxWidth.False">
            @Body
        </MudContainer>
        <MudContainer Class="mt-auto align-self-end">
            <MudText Class="pa-5" Typo="Typo.subtitle1" Align="Align.Center">
                Copyright &copy; Frosty Shadow @DateTime.UtcNow.Year
            </MudText>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    MudTheme currentTheme = new MudTheme();

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async void OnInitialized()
    {
        currentTheme = (await LocalStorageService.GetItem<bool>("darkMode")) ? ThemeLibrary.DarkTheme : ThemeLibrary.LightTheme;
        StateHasChanged();
    }

    void DarkMode()
    {
        if (currentTheme == ThemeLibrary.LightTheme)
        {
            currentTheme = ThemeLibrary.DarkTheme;
            LocalStorageService.SetItem<bool>("darkMode", true);
        }
        else
        {
            currentTheme = ThemeLibrary.LightTheme;
            LocalStorageService.SetItem<bool>("darkMode", false);
        }
    }
}