@inherits LayoutComponentBase
@inject ILocalStorageService LocalStorageService
@inject IThemeLibrary ThemeLibrary
<MudThemeProvider Theme="@currentTheme" />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudText Typo="Typo.h5" Class="ml-3">
            Conductor Service Manager
        </MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="DarkMode" />
    </MudAppBar>
    <MudMainContent Class="d-flex flex-column" Style="height: 100vh">
        <MudContainer Class="mx-5 pa-5 align-self-center" MaxWidth="MaxWidth.Small">
            @Body
        </MudContainer>
        <MudContainer Class="mt-auto align-self-end">
            <MudText Class="pa-5" Typo="Typo.subtitle1" Align="Align.Center">
                Copyright &copy; Frosty Shadow @DateTime.UtcNow.Year
            </MudText>
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    MudTheme currentTheme = new MudTheme();

    protected override async void OnInitialized()
    {
        currentTheme = (await LocalStorageService.GetItem<bool>("darkMode")) ? ThemeLibrary.DarkTheme : ThemeLibrary.LightTheme;
        StateHasChanged();
    }

    void DarkMode()
    {
        if (currentTheme == ThemeLibrary.LightTheme)
        {
            currentTheme = ThemeLibrary.DarkTheme;
            LocalStorageService.SetItem<bool>("darkMode", true);
        }
        else
        {
            currentTheme = ThemeLibrary.LightTheme;
            LocalStorageService.SetItem<bool>("darkMode", false);
        }
    }
}